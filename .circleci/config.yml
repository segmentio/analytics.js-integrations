version: 2
jobs:
  setup:
    docker:
      - image: ${AWS_ACCOUNT_ID}.dkr.ecr.us-west-2.amazonaws.com/analytics.js-integrations-ci
    steps:
      - run:
          name: Checkout code
          command: checkout
      - restore_cache:
          key: deps-{{ checksum "yarn.lock" }}
      - run:
          name: Authenticate npm
          command: npm config set "//registry.npmjs.org/:_authToken" $NPM_AUTH
      - run:
          name: Install
          command: yarn install --frozen-lockfile
      - save_cache:
          key: deps-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: .
          paths: [.]

  test_phantomjs:
    docker:
      - image: ${AWS_ACCOUNT_ID}.dkr.ecr.us-west-2.amazonaws.com/analytics.js-integrations-ci
    steps:
      - attach_workspace: { at: . }
      - restore_cache:
          key: deps-{{ checksum "yarn.lock" }}
      - run:
          name: Test updated integrations in PhantomJS
          command: yarn test-updated-integrations PhantomJS

  test_saucelabs:
    docker:
      - image: ${AWS_ACCOUNT_ID}.dkr.ecr.us-west-2.amazonaws.com/analytics.js-integrations-ci
        environment:
    steps:
      - attach_workspace: { at: . }
      - restore_cache:
          key: deps-{{ checksum "yarn.lock" }}
      - run:
          name: Tagging tunnel
          command: |
            SC_TUNNEL_ID="ajs-integrations-${CIRCLE_BUILD_NUM}"
            echo "export SC_TUNNEL_ID=${SC_TUNNEL_ID}" >> ${BASH_ENV}
            source ${BASH_ENV}
      - run:
          name: Start SauceConnect
          command: sc -k $SAUCE_ACCESS_KEY -u $SAUCE_USERNAME -f ready.sc -d sc.pid -i ${SC_TUNNEL_ID}
          background: true
      - run:
          name: Wait until it is ready
          command: inotifywait --timeout 300 --exclude sc.pid --event create .
      - run:
          name: Test updated integrations in Chrome
          command: yarn test-updated-integrations chrome
      - run:
          name: Test updated integrations in Firefox
          command: yarn test-updated-integrations firefox
      - run:
          name: Test updated integrations in IE
          command: yarn test-updated-integrations ie
      - run:
          name: Test updated integrations in Egde
          command: yarn test-updated-integrations edge
      - run:
          name: Test updated integrations in Safari
          command: yarn test-updated-integrations safari
      - run:
          name: Killing tunnel
          command: kill $(cat sc.pid)

  test_snyk:
    docker:
      - image: ${AWS_ACCOUNT_ID}.dkr.ecr.us-west-2.amazonaws.com/analytics.js-integrations-ci
        environment:
    steps:
      - attach_workspace: { at: . }
      - restore_cache:
          key: deps-{{ checksum "yarn.lock" }}
      - run:
          name: Snyk Setup
          command: curl -sL https://raw.githubusercontent.com/segmentio/snyk_helpers/master/initialization/snyk.sh | sh

  publish:
    docker:
      - image: ${AWS_ACCOUNT_ID}.dkr.ecr.us-west-2.amazonaws.com/analytics.js-integrations-ci
    steps:
      - attach_workspace: { at: . }
      - restore_cache:
          key: deps-{{ checksum "yarn.lock" }}
      - run:
          name: Authenticate npm
          command: npm config set "//registry.npmjs.org/:_authToken" $NPM_AUTH
      - run:
          name: Publish updated packages
          command: yarn publish-integrations
      
workflows:
  version: 2
  test_and_publish:
    jobs:
      - setup
      - test_phantomjs:
          requires:
            - setup
      - test_saucelabs:
          requires:
            - setup
      - test_snyk:
          context: snyk
          requires:
            - setup
      - publish:
          requires:
            - test_phantomjs
            - test_saucelabs
          filters:
            branches:
              only: master
