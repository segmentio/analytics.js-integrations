version: 2
jobs:
  setup:
    docker:
      - image: ${AWS_ACCOUNT_ID}.dkr.ecr.us-west-2.amazonaws.com/analytics.js-integrations-ci
    steps:
      - run:
          name: Checkout code
          command: checkout
      - restore_cache:
          key: deps-{{ checksum "yarn.lock" }}
      - run:
          name: Install CircleCI CLI
          command: curl -fLSs https://circle.ci/cli | bash
      - run:
          name: Authenticate npm
          command: npm config set "//registry.npmjs.org/:_authToken" $NPM_AUTH
      - run:
          name: Install
          command: yarn install --frozen-lockfile
      - save_cache:
          key: deps-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: .
          paths: [.]

  test_saucelabs:
    docker:
      - image: ${AWS_ACCOUNT_ID}.dkr.ecr.us-west-2.amazonaws.com/analytics.js-integrations-ci
    steps:
      - attach_workspace: { at: . }
      - restore_cache:
          key: deps-{{ checksum "yarn.lock" }}
      - run:
          name: Install Sauce Labs and Set Up Tunnel
          background: true
          command: |
            curl https://saucelabs.com/downloads/sc-4.4.12-linux.tar.gz -o saucelabs.tar.gz
            tar -xzf saucelabs.tar.gz
            cd sc-*
            bin/sc -u ${SAUCE_USERNAME} -k ${SAUCE_ACCESSKEY}
            wget --retry-connrefused --no-check-certificate -T 60 localhost:4445  # wait for app to be ready
      - run:
          name: Run Tests
          command: yarn test:ci
      - run:
          name: Shut Down Sauce Connect Tunnel
          command: |
            kill -9 `cat /tmp/sc_client.pid`

  test_snyk:
    docker:
      - image: ${AWS_ACCOUNT_ID}.dkr.ecr.us-west-2.amazonaws.com/analytics.js-integrations-ci
    steps:
      - attach_workspace: { at: . }
      - restore_cache:
          key: deps-{{ checksum "yarn.lock" }}
      - run:
          name: Snyk Setup
          command: curl -sL https://raw.githubusercontent.com/segmentio/snyk_helpers/master/initialization/snyk.sh | sh

  publish:
    docker:
      - image: ${AWS_ACCOUNT_ID}.dkr.ecr.us-west-2.amazonaws.com/analytics.js-integrations-ci
    steps:
      - attach_workspace: { at: . }
      - restore_cache:
          key: deps-{{ checksum "yarn.lock" }}
      - run:
          name: Authenticate npm
          command: npm config set "//registry.npmjs.org/:_authToken" $NPM_AUTH
      - run:
          name: Publish updated packages
          command: scripts/publish-integrations

workflows:
  version: 2
  test_and_publish:
    jobs:
      - setup:
          context: npm
      - test_headless:
          requires:
            - setup
      - test_saucelabs:
          requires:
            - setup
      - test_snyk:
          context: snyk
          requires:
            - setup
      - publish:
          context: npm
          requires:
            - test_headless
            - test_saucelabs
          filters:
            branches:
              only: master
